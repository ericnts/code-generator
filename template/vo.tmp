package {Package}

import (
	"{Project}/common"
	"{Project}/entity"{Import}
)

type {Object}Query struct {
	common.Query

{Field}
}

type {Object} struct {
{Field}
}

func (v *{Object}) Load(inter common.IEntity) {
	e := inter.(*entity.{Object})
{ToVO}
}

type {Object}Detail struct {
	{Object}
}

func (v *{Object}Detail) Load(inter common.IEntity) {
	e := inter.(*entity.{Object})
	v.{Object}.Load(e)
}

type {Object}Modify struct {
{Field}
}

func (p *{Object}Modify) ToEntity(id string) common.IEntity {
	return &entity.{Object}{
		Entity: common.Entity{
			ID: id,
		},
{ToEntity}
	}
}

type {Object}Create struct {
	{Object}Modify
}

func (p *{Object}Create) ToEntity() common.IEntity {
    e := p.{Object}Modify.ToEntity("")
	c := e.(*entity.{Object})
	return c
}
